@page "/CreateUser"
@using System.Text.RegularExpressions
@using BestMovies.Data.CustomServices
@using BestMovies.Models

@inject NavigationManager NavigationManager
@inject IUserService LoginService

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success">
                <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!"  @ref="userName"/>
                <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                                  InputType="InputType.Password"
                                  Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                  RequiredError="Password is required!"/>
                    <MudTextField T="string"
                                  Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                                  Validation="@(new Func<string, string>(PasswordMatch))"/>
                    <div class="d-flex">
                        <MudCheckBox T="bool" Label="Adult Content"/>
                    </div>
                    <div class="d-flex align-center justify-space-between">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" OnClick="@(Register)" Class="ml-auto">Register</MudButton>
                    </div>
            </MudForm>   
        </MudPaper>
        @* <MudPaper Class="pa-4 mt-4"> *@
        @*     <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton> *@
        @*     <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.ResetAsync())" Class="mx-2">Reset</MudButton> *@
        @*     <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton> *@
        @* </MudPaper> *@
    </MudItem>
</MudGrid>




@code {
    
    bool success;
    MudTextField<string> userName;
    MudTextField<string> pwField1;
    MudForm form;
    

    private void Register()
    {
        form.Validate();
        if(!form.IsValid) return;
        
        LoginService.RegisterUser(new User{Username = userName.Text, PasswordHash = pwField1.Text,SecurityLevel = 1});
        
    }
    
    
    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }
    
}



